[{"C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\index.js":"1","C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\App.js":"2","C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\components\\Nota.js":"3","C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\components\\ListaNote.js":"4","C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\components\\AggiungiNota.js":"5","C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\service\\NotaService.js":"6","C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\http-common.js":"7"},{"size":201,"mtime":1610105033568,"results":"8","hashOfConfig":"9"},{"size":1215,"mtime":1610122403510,"results":"10","hashOfConfig":"9"},{"size":1656,"mtime":1610122181931,"results":"11","hashOfConfig":"9"},{"size":2338,"mtime":1610120655745,"results":"12","hashOfConfig":"9"},{"size":1945,"mtime":1610111702425,"results":"13","hashOfConfig":"9"},{"size":506,"mtime":1610111436075,"results":"14","hashOfConfig":"9"},{"size":260,"mtime":1610113713849,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"k1ejf8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\index.js",[],["33","34"],"C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\App.js",[],"C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\components\\Nota.js",["35","36","37","38"],"import React, { useState, useEffect } from \"react\";\r\nimport NotaService from \"../service/NotaService\";\r\n\r\nconst Nota = props => {\r\n    const statoNotaIniziale = {\r\n        id: null,\r\n        content: \"\"\r\n    };\r\n\r\n    const [notaCorrente, setNotaCorrente] = useState(statoNotaIniziale);\r\n    const [messaggio, setMessaggio] = useState(\"\");\r\n\r\n\r\n    const getNota = id => {\r\n        NotaService.get(id)\r\n            .then(response => {\r\n                setNotaCorrente(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNota(props.match.params.id);\r\n    }, [props.match.params.id]);\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setNotaCorrente({ ...notaCorrente, [name]: value });\r\n    };\r\n\r\n\r\n    const aggiornaNota = () => {\r\n        NotaService.update(notaCorrente.id, notaCorrente)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setMessaggio(\"La nota Ã¨ stata aggiornata correttamente.\");\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const eliminaNota = () => {\r\n        NotaService.remove(notaCorrente.id)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                props.history.push(\"/note\");\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            nota per id\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nota;","C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\components\\ListaNote.js",["39"],"import React, { useState, useEffect } from \"react\";\r\nimport NotaService from \"../service/NotaService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListaNote = () => {\r\n\r\n    const [note, setNote] = useState([]);\r\n    const [notaCorrente, setNotaCorrente] = useState(null);\r\n    const [indexCorrente, setIndexCorrente] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        prendiNote();\r\n    }, []);\r\n\r\n    const prendiNote = () => {\r\n        NotaService.getAll().then(response => {\r\n            setNote(response.data);\r\n            console.log(response.data);\r\n        }).catch(e => {\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    const aggiornaLista = () => {\r\n        prendiNote();\r\n        setNotaCorrente(null);\r\n        setIndexCorrente(-1);\r\n    };\r\n\r\n    const setNotaAttiva = (nota, index) => {\r\n        setNotaCorrente(nota);\r\n        setIndexCorrente(index);\r\n    };\r\n    console.log(note);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h4>Lista Note</h4>\r\n                <ul>\r\n                    {note.data && note.data.map((nota, index) => (\r\n                        <li className={\"list-group-item lista \" + (index === indexCorrente ? \"active\" : \"\")}\r\n                            onClick={() => setNotaAttiva(nota, index)} key={index}>{nota.content}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                {notaCorrente ? (\r\n                    <div>\r\n                        <h4>Nota</h4>\r\n                        <div>\r\n                            <label>\r\n                                <strong>Contenuto:</strong>\r\n                            </label>{\" \"}\r\n                            {notaCorrente.content}\r\n                        </div>\r\n                        <Link\r\n                            to={\"/tutorials/\" + notaCorrente.id}\r\n                            className=\"badge badge-warning\"\r\n                        >\r\n                            modifica\r\n            </Link>\r\n                    </div>\r\n                ) : (\r\n                        <div>\r\n                            <br />\r\n                            <p>Clicca su una nota per visualizzarla</p>\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ListaNote;","C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\components\\AggiungiNota.js",[],"C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\service\\NotaService.js",[],"C:\\Users\\Fabio\\Desktop\\BloccoNote\\blocco-note\\src\\http-common.js",["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":11,"column":12,"nodeType":"48","messageId":"49","endLine":11,"endColumn":21},{"ruleId":"46","severity":1,"message":"50","line":29,"column":11,"nodeType":"48","messageId":"49","endLine":29,"endColumn":28},{"ruleId":"46","severity":1,"message":"51","line":35,"column":11,"nodeType":"48","messageId":"49","endLine":35,"endColumn":23},{"ruleId":"46","severity":1,"message":"52","line":46,"column":11,"nodeType":"48","messageId":"49","endLine":46,"endColumn":22},{"ruleId":"46","severity":1,"message":"53","line":24,"column":11,"nodeType":"48","messageId":"49","endLine":24,"endColumn":24},{"ruleId":"54","severity":1,"message":"55","line":5,"column":50,"nodeType":"56","messageId":"57","endLine":5,"endColumn":51},{"ruleId":"54","severity":1,"message":"55","line":5,"column":56,"nodeType":"56","messageId":"57","endLine":5,"endColumn":57},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'messaggio' is assigned a value but never used.","Identifier","unusedVar","'handleInputChange' is assigned a value but never used.","'aggiornaNota' is assigned a value but never used.","'eliminaNota' is assigned a value but never used.","'aggiornaLista' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]